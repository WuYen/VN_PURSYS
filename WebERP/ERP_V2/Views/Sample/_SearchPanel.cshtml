<script>
    function ApplyFilterlick(s, e) {
        SearchGrid.PerformCallback();
    }
    function SearchGridBegCall(s, e) {
        e.customArgs = $.extend(e.customArgs, GetEditorValues());  //get SearchForm data
    }
    function GetEditorValues() {
        return MVCxClientUtils.GetSerializedEditorValuesInContainer("SearchForm", true);
    }
</script>
<div>
    <form id="SearchForm" style="margin-right:2px">
        @Html.DevExpress().FormLayout(
         settings =>
         {
             settings.Name = "Search";
             settings.SettingsAdaptivity.AdaptivityMode = FormLayoutAdaptivityMode.SingleColumnWindowLimit;
             settings.SettingsAdaptivity.SwitchToSingleColumnAtWindowInnerWidth = 600;
             settings.Styles.Style.Paddings.Padding = 0;
             settings.ControlStyle.Border.BorderWidth = 1;
             settings.ControlStyle.Border.BorderColor = System.Drawing.ColorTranslator.FromHtml("#c0c0c0");
             settings.ControlStyle.BackColor = System.Drawing.ColorTranslator.FromHtml("#f9f9f9");
             //settings.ControlStyle.BackColor = System.Drawing.Color.Honeydew;


             settings.ColCount = 3;
             settings.Items.Add(i =>
             {
                 i.Name = "FTRN_NO";
                 i.Caption = "單號";
                 i.NestedExtension().TextBox(s =>
                 {
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 });
             });
             settings.Items.Add(i =>
             {
                 i.Name = "FSUP_ID";
                 i.Caption = "廠商";
                 i.NestedExtension().ComboBox(s =>
                 {
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Width = Unit.Percentage(100);
                     s.Properties.ValueField = "SUP_ID";
                     s.Properties.TextField = "SUP_NM";
                     s.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                     s.Properties.DataSource = ERP_V2.CacheCommonDataModule.GetFA07A();
                 });
             });
             settings.Items.Add(i =>
             {
                 i.Name = "FSTK_ID";
                 i.Caption = "倉庫";
                 i.NestedExtension().ComboBox(s =>
                 {
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                     s.Properties.ValueField = "STK_ID";
                     s.Properties.TextField = "STK_NM";
                     s.Properties.ClearButton.DisplayMode = ClearButtonDisplayMode.OnHover;
                     s.Properties.DataSource = ERP_V2.CacheCommonDataModule.GetFA16A();
                 });
             });
             settings.Items.Add(i =>
             {
                 i.Name = "DTBeg";
                 i.Caption = "日期";
                 i.NestedExtension().DateEdit(s =>
                 {
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 });
             });
             settings.Items.Add(i =>
             {
                 i.Name = "DTEnd";
                 i.Caption = "to";
                 i.NestedExtension().DateEdit(s =>
                 {
                     s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                 });
             });
             //settings.Items.Add(i =>
             //{
             //    i.Name = "Duration";
             //    i.Caption = "日期";
             //    i.Width = Unit.Percentage(66.66);
             //    i.SetNestedContent(() =>
             //    {
             //        //ViewContext.Writer.Write("<div class=\"display:inline-block;float:left;\">");
             //        //Html.DevExpress().DateEdit(dt =>
             //        //{
             //        //    dt.Name = "DateBeg";
             //        //    dt.Properties.Caption = "";
             //        //    dt.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
             //        //    dt.Width = Unit.Percentage(100);
             //        //    dt.Properties.EditFormatString = "yyyy/MM/dd";
             //        //    dt.Date = new DateTime(DateTime.Now.Year, DateTime.Now.AddMonths(-2).Month, 1);
             //        //}).Render();
             //        //ViewContext.Writer.Write("</div>");
             //        //ViewContext.Writer.Write("<div class=\"display:inline-block;float:left;\">");
             //        //@Html.DevExpress().DateEdit(dt =>
             //        //{
             //        //    dt.Name = "DateEnd";
             //        //    dt.Properties.Caption = "to";
             //        //    dt.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
             //        //    dt.Properties.CaptionSettings.ShowColon = false;
             //        //    dt.Width = Unit.Percentage(100);
             //        //    dt.Properties.EditFormatString = "yyyy/MM/dd";
             //        //    dt.Date = DateTime.Now;
             //        //}).Render();
             //        //ViewContext.Writer.Write("</div>");
             //    });
             //});
         }).GetHtml()
    </form>
    <div style="height:32px">
        <div style="margin-top:5px;float:right;">
            @Html.DevExpress().Button(
        settings =>
        {
            settings.Name = "ApplyFilter";
            settings.Text = "Filter";
            settings.Width = 120;
            settings.ClientSideEvents.Click = "ApplyFilterlick";
            settings.Images.Image.IconID = "filter_filter_16x16office2013";
        }).GetHtml()
        </div>
    </div>
</div>

<div style="margin-top:10px">
    @{
        Html.RenderAction("SearchGrid");
    }
</div>