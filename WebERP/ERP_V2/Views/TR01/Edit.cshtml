@model ERP_V2.ViewModels.TR01.Edit

@{
    ViewBag.Title = "Edit";
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}
<style>
    .DisableEditor {
        pointer-events: none;
    }
</style>
<script>
    var formSave = false;
    var currentKey = '@Model.MasterKey';

    function SaveClick(s, e) {
        $.validator.unobtrusive.parse("#MasterForm");
        var f = $("#MasterForm");
        if (f.valid()) {
            formSave = true;
            if (DetailGrid.batchEditApi.HasChanges()){
                DetailGrid.UpdateEdit();
            }
            else{
                DetailGrid.PerformCallback();
            }
        }
    }

    function CancelClick(s, e) {
        DetailGrid.CancelEdit();
        FormSubmit('@Url.Action("Index", "TR01")')
    }
    function ReloadClick(s, e) {
        DetailGrid.CancelEdit();
        FormSubmit('@Url.Action("Edit", "TR01")')
    }

    //=======================DetailGrid========================
    function DetailGridInit(s, e) {
        SetHideColumn();
    }

    function DetailGridBeginCallback(s, e) {
        e.customArgs["key"] = currentKey;//DetailGrid call back event argument Ex: sort...
        if (formSave) {
            e.customArgs = $.extend(e.customArgs, GetEditorValues());  //get master data
        }
    }
    var index;
    function DetailGridBatchStartEditing(s, e) {
        index = e.visibleIndex;
    }
    function DetailGridEndCallBack(s, e) {
        SetHideColumn();
        if (formSave) {
            ShowError(s.cpEditError);//operation for save fail
            formSave = false;
            $("#MasterFormDiv").html(s.cpMasterForm);//reload content of master form
            if (s.cpDeleteIDs != undefined) {
                var key = s.cpDeleteIDs.split(",");//把刪除的row重新標記刪除
                for (var i = 0; i < key.length - 1; i++) {
                    DetailGrid.DeleteRowByKey(key[i].toString());
                }
            }
        }
    }

    function BtnDetailAddNewClick(s, e) {
        DetailGrid.AddNewRow();
    }

    function DetailGridBatchEndEditing(s, e) {
        SetHideColumn();
        var PriceColIndex = s.GetColumnByField("PUR_PR").index;
        var QuantityColIndex = s.GetColumnByField("PUR_QT").index;
        var priceValue = e.rowValues[PriceColIndex].value;
        var quantityValue = e.rowValues[QuantityColIndex].value;
        s.batchEditApi.SetCellValue(e.visibleIndex, "Sum", priceValue * quantityValue, null, true);

        //CalculateSummary(s, e.rowValues, e.visibleIndex, false);
    }
    function DetailGridBatchEditRowDeleting(s, e) {
        //CalculateSummary(s, e.rowValues, e.visibleIndex, false);
    }
    function OnChangesCanceling(s, e) {
        if (s.batchEditApi.HasChanges())
            setTimeout(function () {
                s.Refresh();
            }, 0);
    }
    function SetHideColumn() {
        $('td.HideColumn').css('display', 'none');
    }

    function CalculateSummary(grid, rowValues, visibleIndex, isDeleting) {
        var originalValue = grid.batchEditApi.GetCellValue(visibleIndex, "Sum");
        var newValue = rowValues[(grid.GetColumnByField("Sum").index)].value;
        var dif = isDeleting ? -newValue : newValue - originalValue;
        labelSum.SetValue((parseFloat(labelSum.GetValue()) + dif).toFixed(1));
    }

    //===========================Product Select===========================

    function ProductBtnEditClick(s, e) {
        //index = DetailGrid.GetFocusedCell().rowVisibleIndex;
        var ITM_NO = DetailGrid.batchEditApi.GetCellValue(index, "ITM_NO", false);
        ProductGridLookUp.PerformCallback({ selectedItem: ITM_NO, FirstPage: true });
        pcProductSearch.ShowAtElement(s.GetMainElement());
        //CbBA01A_ID
    }
    function ProductLookUpBegCall(s, e) {
        e.customArgs["BA01A_ID"] = CbBA01A_ID.GetValue();
    }
    function SetProductTextBox(s, e) {
        ProductGridLookUp.GetSelectedFieldValues('BA02A_ID;ITM_NO;ITM_NM;PUR_PR', OnGetSelectedFieldValues);
    }
    function OnGetSelectedFieldValues(selectedValues) {
        if (selectedValues.length == 0) {
            return;
        } else {
            DetailGrid.batchEditApi.SetCellValue(index, "BA02A_ID", selectedValues[0][0], selectedValues[0][0]);
            DetailGrid.batchEditApi.SetCellValue(index, "ITM_NO", selectedValues[0][1], selectedValues[0][1]);//value,displayText
            DetailGrid.batchEditApi.SetCellValue(index, "ITM_NM", selectedValues[0][2], selectedValues[0][2]);
            //DetailGrid.batchEditApi.SetCellValue(index, "BA01A_ID", selectedValues[0][3]);
            DetailGrid.batchEditApi.SetCellValue(index, "PUR_PR", selectedValues[0][3], selectedValues[0][3].toFixed(4));
            DetailGrid.batchEditApi.EndEdit();
        }
    }

    //===========================BA01ASelectedChange==============
    function BA01ASelectedChange(s, e) {
        //alert(s.name);
        var value = s.GetValue();
        CbBA01B_ID.PerformCallback();
    }
    function CboContactBegCall(s, e) {
        e.customArgs["key"] = CbBA01A_ID.GetValue();
    }
    function CboContactEndCall(s, e) {
        CbBA03A_ID.SetValue(CbBA01B_ID.cpBA03A_ID);
        ADD_DR.SetValue(CbBA01B_ID.cpADD_DR);
        FAX_NO.SetText(CbBA01B_ID.cpFAX_NO);
        //alert(s.cpADD_DR + "," + s.cpFAX_NO + "," + s.cpBA03A_ID);
    }
    function CBOContactSelectChanged(s, e) {
        TEL_NO.SetText(s.GetSelectedItem().texts[1])
        TEL_EX.SetText(s.GetSelectedItem().texts[2])
    }
    //===========================Other============================
    function GetEditorValues() {
        return MVCxClientUtils.GetSerializedEditorValuesInContainer("MasterForm", true);
    }

    function FormSubmit(url) {
        //$(window).unbind("beforeunload", handler);
        var form = $('<form></form>');
        form.attr("method", "post");
        form.attr("action", url);
        var field = $('<input></input>');
        field.attr("type", "hidden");
        field.attr("name", "key");
        field.attr("value", currentKey);
        form.append(field);
        $(document.body).append(form);
        form.submit();
    }
</script>

<div style="margin:10px">
    @Html.DevExpress().Button(
        s =>
        {
            s.Name = "BtnSave";
            s.Text = "Save";
            s.Images.Image.Url = "~/Content/Icon/save_grey_18x18.png";
            s.ClientSideEvents.Click = "SaveClick";
        }).GetHtml()
    @Html.DevExpress().Button(
        s =>
        {
            s.Name = "BtnCancel";
            s.Text = "Cancel";
            s.Images.Image.Url = "~/Content/Icon/cancel_grey_18x18.png";
            s.ClientSideEvents.Click = "CancelClick";
        }).GetHtml()
    @Html.DevExpress().Button(
        s =>
        {
            s.Name = "BtnReload";
            s.Text = "Reload";
            s.Images.Image.Url = "~/Content/Icon/autorenew_grey_18x18.png";
            s.ClientSideEvents.Click = "ReloadClick";
        }).GetHtml()
    @*@Html.DevExpress().Button(
        s =>
        {
            s.Name = "BtnLockStock";
            s.Text = "LockStock";
        }).GetHtml()*@
</div>

<form id="MasterForm" style="margin:10px">
    <div id="MasterFormDiv">
        @{
            Html.RenderPartial("_MasterForm", Model.Master);
        }
    </div>
</form>

<div style="margin:10px;padding-right:26px">
    @{
        Html.RenderPartial("_DetailGrid", Model.DetailList);
    }
</div>

@{
    Html.RenderAction("ProductPopup", "Utility", new { popupElementID = "BtnProductSelect" });
}