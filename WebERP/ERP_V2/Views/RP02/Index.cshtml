
@{
    ViewBag.Title = "採購類別佔比";
}

<h2>@ViewBag.Title</h2>

@*各類別年份占比*@
<script>
    function BtnSearchClick(s, e) {
        GridView.PerformCallback();
    }
    function GridViewBegCallback(s, e) {
        e.customArgs["Year"] = Year.GetValue();
    }
    function GridViewEndCallback(s, e) {
        chart.PerformCallback();
    }
</script>
<div style="margin-left:10px;margin-top:10px;height:30px">
    <div style="float:left;display:inline-block;margin-right:5px">
        @Html.DevExpress().ComboBox(settings =>
                       {
                           settings.Name = "Year";
                           settings.Properties.Caption = Resources.Resource.Year;
                           for (int i = 2018; i <= DateTime.Now.Year; i++)
                           {
                               settings.Properties.Items.Add(i.ToString(), i);
                           }
                           settings.SelectedIndex = 0;
                       }).GetHtml()
    </div>

    <div style="float:left;display:inline-block;margin-top:-4px;margin-right:5px">
        @Html.DevExpress().Button(settings =>
                       {
                           settings.Name = "BtnSearch";
                           settings.Text = "Search";
                           settings.Images.Image.Url = "~/Content/Icon/search.png";
                           settings.ClientSideEvents.Click = "BtnSearchClick";
                       }).GetHtml()
    </div>
    @*<div style="float:left;display:inline-block;margin-right:5px">

        </div>
        <div style="float:left;display:inline-block;margin-right:5px">

        </div>*@
</div>
<div style="height:520px">
    <div style="display:inline-block; float:left">
        @{
            Html.RenderAction("GridView");
        }
    </div>
    <div style="display:inline-block; float:left; ">
        @{
            Html.RenderAction("ChartPartial");
        }
    </div>
</div>


@*各類別月份占比*@
<script>
    function BtnSearch2Click(s, e) {
        GridView2.PerformCallback();
    }
    function GridViewBegCallback2(s, e) {
        e.customArgs["Year"] = Year2.GetValue();
        e.customArgs["Month"] = Month2.GetValue();
    }
    function GridViewEndCallback2(s, e) {
        Chart2.PerformCallback();
    }
</script>
<div style="margin-left:10px;margin-top:10px;height:30px">
    <div style="float:left;display:inline-block;margin-right:5px">
        @Html.DevExpress().ComboBox(settings =>
        {
            settings.Name = "Year2";
            settings.Properties.Caption = Resources.Resource.Year;
            for (int i = 2018; i <= DateTime.Now.Year; i++)
            {
                settings.Properties.Items.Add(i.ToString(), i);
            }
            settings.SelectedIndex = 0;
        }).GetHtml()
    </div>
    <div style="float:left;display:inline-block;margin-right:5px">
        @Html.DevExpress().ComboBox(settings =>
        {
            settings.Name = "Month2";
            settings.Properties.Caption = Resources.Resource.Month;
            for (int i = 1; i < 13; i++)
            {
                settings.Properties.Items.Add(i.ToString(), i);
            }
            settings.SelectedIndex = DateTime.Now.Month - 2;
            if (DateTime.Now.Month - 2 <= 0)
            {
                settings.SelectedIndex = 0;
            }
        }).GetHtml()
    </div>

    <div style="float:left;display:inline-block;margin-top:-4px;margin-right:5px">
        @Html.DevExpress().Button(settings =>
        {
            settings.Name = "BtnSearch2";
            settings.Text = "Search";
            settings.Images.Image.Url = "~/Content/Icon/search.png";
            settings.ClientSideEvents.Click = "BtnSearch2Click";
        }).GetHtml()
    </div>
</div>
<div style="height:520px">
    <div style="display:inline-block; float:left">
        @{
            Html.RenderAction("GridView2");
        }
    </div>
    <div style="display:inline-block; float:left; ">
        @{
            Html.RenderAction("ChartPartial2");
        }
    </div>
</div>