<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BA01A_ACC_N1" xml:space="preserve">
    <value>Bank name</value>
  </data>
  <data name="BA01A_ADD_DR" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="BA01A_BA03A" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="BA01A_BNK_I1" xml:space="preserve">
    <value>Bank account</value>
  </data>
  <data name="BA01A_EIN_NO" xml:space="preserve">
    <value>Uniform numbers</value>
  </data>
  <data name="BA01A_FAX_NO" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="BA01A_INC_NM" xml:space="preserve">
    <value>Manufacturer Name</value>
  </data>
  <data name="BA01A_INC_NO" xml:space="preserve">
    <value>Manufacturer code</value>
  </data>
  <data name="BA01A_PAY_DY" xml:space="preserve">
    <value>Checkout days</value>
  </data>
  <data name="BA01A_SRT_NM" xml:space="preserve">
    <value>Manufacture short name</value>
  </data>
  <data name="BA01A_TEL_NO" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="BA01B_CNT_NM" xml:space="preserve">
    <value>Contact person</value>
  </data>
  <data name="BA01B_EML_DR" xml:space="preserve">
    <value>Eemail</value>
  </data>
  <data name="BA01B_TEL_EX" xml:space="preserve">
    <value>Extension</value>
  </data>
  <data name="BA01B_TEL_NO" xml:space="preserve">
    <value>Telephone line</value>
  </data>
  <data name="BA02A_ENG_NM" xml:space="preserve">
    <value>English name</value>
  </data>
  <data name="BA02A_ITM_NM" xml:space="preserve">
    <value>Product name</value>
  </data>
  <data name="BA02A_ITM_NO" xml:space="preserve">
    <value>Product No</value>
  </data>
  <data name="BA02A_ITM_SP" xml:space="preserve">
    <value>Product Spec</value>
  </data>
  <data name="BA02A_UNT_NM" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="BA02B_PUR_PR" xml:space="preserve">
    <value>Default price</value>
  </data>
  <data name="BA03A_CUR_ID" xml:space="preserve">
    <value>Currency code</value>
  </data>
  <data name="BA03A_CUR_NM" xml:space="preserve">
    <value>Currency name</value>
  </data>
  <data name="BA03A_CUR_RT" xml:space="preserve">
    <value>Default rate</value>
  </data>
  <data name="FailureStr" xml:space="preserve">
    <value>Fail</value>
  </data>
  <data name="REM_MM" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="TR01A_ADD_DR" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="TR01A_BA01A_ID" xml:space="preserve">
    <value>Manufacturers</value>
  </data>
  <data name="TR01A_CPN_NM" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="TR01A_EXP_DT" xml:space="preserve">
    <value>Expected delivery</value>
  </data>
  <data name="TR01A_PUR_DT" xml:space="preserve">
    <value>Date of purchase</value>
  </data>
  <data name="TR01A_PUR_NO" xml:space="preserve">
    <value>Order No</value>
  </data>
  <data name="TR01B_PUR_PR" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="TR01B_PUR_QT" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="TR01B_REL_NO" xml:space="preserve">
    <value>Corresponding data</value>
  </data>
  <data name="TR01B_Sum" xml:space="preserve">
    <value>Sum</value>
  </data>
  <data name="TYP_ID" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="DT_From" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DT_To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="TR01A_CUR_RT" xml:space="preserve">
    <value>Exchange rate</value>
  </data>
  <data name="TR01A_RCV_DT" xml:space="preserve">
    <value>Receiving Date</value>
  </data>
  <data name="TR01A_IVN_NO" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="TaxRate" xml:space="preserve">
    <value>Tax Rate</value>
  </data>
  <data name="RequireErrMsg" xml:space="preserve">
    <value>Require</value>
  </data>
  <data name="BA04A_TYP" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="SEQ_NO" xml:space="preserve">
    <value>Display order</value>
  </data>
  <data name="GreaterThanZero" xml:space="preserve">
    <value>Value must bigger than zero.</value>
  </data>
  <data name="TR01M_Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="TR01M" xml:space="preserve">
    <value>Purchases Management</value>
  </data>
  <data name="NotConfirm" xml:space="preserve">
    <value>Not Confirm</value>
  </data>
  <data name="AbnormalConfirm" xml:space="preserve">
    <value>Exception Confirm</value>
  </data>
  <data name="ApplyConfirm" xml:space="preserve">
    <value>Apply Confirm</value>
  </data>
  <data name="ConfirmApply" xml:space="preserve">
    <value>Confirm application</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CaseClose" xml:space="preserve">
    <value>CaseClose</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="FallBackDays" xml:space="preserve">
    <value>FallBackDays</value>
  </data>
  <data name="TR01M_ARR_QT" xml:space="preserve">
    <value>Arrive Quantity</value>
  </data>
  <data name="TR01M_INV_MY" xml:space="preserve">
    <value>Invoice</value>
  </data>
  <data name="ArriveStatus" xml:space="preserve">
    <value>Arrival status</value>
  </data>
  <data name="NotAllArrive" xml:space="preserve">
    <value>Not full delivery</value>
  </data>
  <data name="ActArriveDate" xml:space="preserve">
    <value>Actual arrival date</value>
  </data>
  <data name="TR01M_ArriveQT" xml:space="preserve">
    <value>Arrival Quantity</value>
  </data>
  <data name="TR01M_INV_NO" xml:space="preserve">
    <value>Invoice NO</value>
  </data>
  <data name="TR01M_CUR_RT" xml:space="preserve">
    <value>Arrival exchange rate</value>
  </data>
  <data name="TRM_INV_MY" xml:space="preserve">
    <value>Invoice amount</value>
  </data>
  <data name="Applying" xml:space="preserve">
    <value>Applying</value>
  </data>
  <data name="ConfirmClose" xml:space="preserve">
    <value>ConfirmCase</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Press" xml:space="preserve">
    <value>Press</value>
  </data>
  <data name="CaseClosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="NotClosed" xml:space="preserve">
    <value>Not Confirm</value>
  </data>
  <data name="AllArrive" xml:space="preserve">
    <value>All arrive</value>
  </data>
  <data name="CloseUser" xml:space="preserve">
    <value>Close User</value>
  </data>
  <data name="ApplyUser" xml:space="preserve">
    <value>Apply User</value>
  </data>
  <data name="FillInUser" xml:space="preserve">
    <value>Fill In User</value>
  </data>
  <data name="DateRangBeg" xml:space="preserve">
    <value>Date From</value>
  </data>
  <data name="DateRangEnd" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="TOT_PR" xml:space="preserve">
    <value>Total price</value>
  </data>
  <data name="NotEnoughQT" xml:space="preserve">
    <value>Not Arrive QT</value>
  </data>
  <data name="RP01_PUR_QT" xml:space="preserve">
    <value>QT</value>
  </data>
  <data name="ReceiveMY" xml:space="preserve">
    <value>Arrival price</value>
  </data>
  <data name="EachPrice" xml:space="preserve">
    <value>Each Price</value>
  </data>
</root>